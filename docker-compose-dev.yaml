version: '3.8'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    ports:
      - "8100:8000"  # Mapeando a porta 8000 do container para a porta 8000 do host
    volumes:
      - ./api:/var/www/html
    networks:
      - ger-vec
    depends_on:
      - redis
      - postgres
    command: ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]

  app:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
      args:
        - API_URL=${API_URL}
    ports:
      - "5000:5173"  # Mapeando a porta 5173 do container para a porta 5173 do host
    volumes:
      - ./app:/var/www/html
    networks:
      - ger-vec
    command: ["npm", "run", "dev"]  # Substituindo o CMD para o serviço app

  redis:
    image: redis:8.0.0-alpine
    container_name: redis-container
    expose:
      - "6379"  # Não é mapeado para o host, mas está acessível para outros containers na mesma rede
    networks:
      - ger-vec

  postgres:
    image: postgres:17-alpine
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha123
      POSTGRES_DB: api
    expose:
      - "5432"  # Não é mapeado para o host, mas está acessível para outros containers na mesma rede
    networks:
      - ger-vec
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  ger-vec:
    driver: bridge

volumes:
  postgres-data:
    driver: local
